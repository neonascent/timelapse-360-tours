<krpano>

	<!-- krpano 1.19.pr4 - Video-Interface Skin -->


	<!-- skin settings -->
	<skin_settings layout_width="100%"
	               layout_maxwidth="814"
	               controlbar_width="-24"
	               controlbar_height="40"
	               controlbar_offset="20"
	               design_skin_images="vtourskin.png"
	               design_bgcolor="0x2D3E50"
	               design_bgalpha="0.8"
	               design_bgborder="0"
	               design_bgroundedge="1"
	               design_bgshadow="0 4 10 0x000000 0.3"
	               design_thumbborder_bgborder="3 0xFFFFFF 1.0"
	               design_thumbborder_padding="2"
	               design_thumbborder_bgroundedge="0"
	               design_text_css="color:#FFFFFF; font-family:Arial;"
	               design_text_shadow="1"
				   loadingtext="loading..."
	               />


	<!-- save the url path of this xml file (the url value will be adjusted during xml parsing) -->
	<videointerfacexmlpath url="./" />


	<!-- mouse / touch / keyboard(button) control settings - http://krpano.com/docu/xml/#control -->
	<control mouse="drag"
	         touch="drag"
	         zoomtocursor="false"
	         zoomoutcursor="false"
	         draginertia="0.1"
	         dragfriction="0.9"
	         movetoaccelerate="1.0"
	         movetospeed="10.0"
	         movetofriction="0.8"
	         keybaccelerate="0.09"
	         keybfriction="0.94"
	         keybfovchange="0.25"
	         mousefovchange="1.0"
	         fovspeed="3.0"
	         fovfriction="0.9"
	         bouncinglimits="true"
	         />

	<!-- mouse cursors - http://krpano.com/docu/xml/#cursors -->
	<cursors standard="default"
	         dragging="move"
	         moving="move"
	         />


	<!-- ensure stagescale 2x for mobile devices (regardless if mobilescale is 0.5 or 1.0) -->
	<krpano stagescale="calc:stagescale * 2" if="stagescale LT 1.0" devices="mobile" />

	<!-- gyro plugin -->
	<plugin name="skin_gyro" keep="true" url="%SWFPATH%/plugins/gyro2.js" devices="html5.and.touch" enabled="true" onavailable="skin_have_gyro_support();" onenable="skin_gyro_enabled();" ondisable="skin_gyro_disabled();" />


	<!-- skin styles -->

	<!-- skin_base - the base skin image -->
	<style name="skin_base" url="calc:videointerfacexmlpath.url + skin_settings.design_skin_images" />


	<!-- skin_glow - button glowing (if additional ondown,onup,onout,over events are needed, this style provides ondown2,onup2,onover2,onout2 events) -->
	<style name="skin_glow"
	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); stopdelayedcall(skin_autohide); if(ondown2, ondown2() );"
	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); if(onover2, onover2() );"
	       onout="if(skin_lockglow === name AND !pressed, skin_buttonglow(null);delete(skin_lockglow); ); if(onout2, onout2() );"
	       onup="if(onup2, onup2()); delayedcall(0, if(hovering AND enabled, skin_buttonglow(get(name),0.3); , skin_buttonglow(null);delete(skin_lockglow); ); );"
	       />

	<action name="skin_buttonglow">
		if('%1' !== 'null',
			set(strength,0.7);
			if(%2 != null, set(strength,%2));
			set(layer[skin_buttonglow].parent, %1);
			set(layer[skin_buttonglow].visible, true);
			tween(layer[skin_buttonglow].alpha, get(strength), 0.07);
		  ,
			tween(layer[skin_buttonglow].alpha, 0.0, 0.1, default,
				set(layer[skin_buttonglow].parent, null);
				set(layer[skin_buttonglow].visible, false);
			  );
		  );
	</action>


	<!-- skin events -->
	<events name="skin_events" keep="true"
	        onclick="skin_video_click_event();"
			onmousedown="skin_video_down_event();"	
	        onenterfullscreen.fullscreensupport="set(layer[skin_btn_fs].crop, '64|576|64|64');"
	        onexitfullscreen.fullscreensupport="set(layer[skin_btn_fs].crop, '0|576|64|64');"
	        />
			

	<!-- skin layout -->

	<style name="skintext" url="%SWFPATH%/plugins/textfield.swf" background="false" border="false" css="calc:skin_settings.design_text_css + ' text-align:left; font-style:italic; font-size:12px;'" textshadow="get:skin_settings.design_text_shadow" />
	<style name="skintext_sel" css="calc:skin_settings.design_text_css + ' text-align:left; font-style:italic; font-size:12px; text-decoration:underline;'" />
	<style name="settingsitem" type="container" align="lefttop" x="0" y="8" width="100%" height="20" bgcolor="0xFFFFFF" bgalpha="0.0" bgcapture="true" onover="set(bgalpha,0.25);" onout="set(bgalpha,0.0);" ondown.touch="onover();" onup.touch="onout();" children="false" />


	<layer name="skin_layer" keep="true" type="container" align="top" width="get:skin_settings.layout_width" maxwidth="get:skin_settings.layout_maxwidth" height="100%" maskchildren="true" xvisible="false" bgcapture="false" zorder="1">

		<layer name="skin_control_bar" state="visible" type="container" autoalpha="true" align="bottom" width="get:skin_settings.controlbar_width" height="calc:skin_settings.controlbar_height" x="0" y="get:skin_settings.controlbar_offset" zorder="3" bgcolor="get:skin_settings.design_bgcolor" bgalpha="get:skin_settings.design_bgalpha" bgborder="get:skin_settings.design_bgborder" bgroundedge="get:skin_settings.design_bgroundedge" bgshadow="get:skin_settings.design_bgshadow" onover="stopdelayedcall(skin_autohide);">

			<!-- left buttons - play/pause, volume -->
			<layer name="skin_btn_playpause" style="skin_base|skin_glow" crop="0|640|64|64" align="left" x="5" y="0" scale="0.5" onclick="plugin[video].togglepause();" />

			<layer name="skin_btn_volume" visible.no-desktop="false" style="skin_glow" type="container" width="32" height="32" align="left" x="40" y="0" bgcapture="true" children="false" onover2="stopdelayedcall(skin_autohide);stopdelayedcall(autoclose_volumectrl); skin_open_volumectrl();" onout2="if(layer[skin_volumectrl].pressed == false, delayedcall(autoclose_volumectrl, 0.5, skin_close_volumectrl()); );" onclick="if(layer[skin_volumectrl].alpha == 1.0, if(plugin[video].volume GT 0.0, set(plugin[video].volume,0.0), set(plugin[video].volume,1.0)); skin_volumectrl_update(); );">
				<layer name="skin_btn_volume_icon" style="skin_base" crop="64|704|64|64" scale="0.5" align="lefttop" />
			</layer>

			<!-- seek bar -->
			<layer name="skin_video_seekbar_container" type="container" align="left" x.desktop="90" x.no-desktop="50" width.desktop.and.fullscreensupport="-228" width.desktop.and.no-fullscreensupport="-188" width.no-desktop.and.fullscreensupport="-188" width.no-desktop.and.no-fullscreensupport="-148" height="100%" bgcapture="true" ondown="stopdelayedcall(skin_autohide);skin_video_ondownseeking();">
				<layer name="skin_video_seekbar" type="container" bgcolor="0xFFFFFF" bgalpha="0.25" align="center" width="100%" height="4">
					<layer name="skin_video_loadbar" type="container" bgcolor="0xFFFFFF" bgalpha="0.5" align="left" width="0" height="4" />
					<layer name="skin_video_seekpos" type="container" bgcolor="0xFFFFFF" bgalpha="1.0" align="left" edge="center" x="0" bgroundedge="8" width="10" height="10" />
				</layer>
			</layer>

			<!-- right buttons - vr, settings, fullscreen -->
			<layer name="skin_quality_container" style="settingsitem" width="80" align="right" edge="center" x.fullscreensupport="87" x.no-fullscreensupport="50" y="0" onclick="if(skin_settings_opened !== true, skin_open_settings(), skin_close_settings() );">
				<layer name="skin_quality" style="skintext" align="left" x="10" html="" />
	     	</layer>
			
			<layer name="skin_gyro_container" style="settingsitem" width="150" x="0" y="-50" alpha="0.5" enabled="false" onclick="switch(plugin[skin_gyro].enabled);">
				<layer name="skin_gyro_txt" style="skintext" align="left" x="0" html="Gyro" />
				<layer name="skin_gyro_not" style="skintext" align="left" x="30" html="N/A" visible="true" />
				<layer name="skin_gyro_ctrl" type="container" align="left" x="30" width="24" height="12" bgborder="1 0xFFFFFF 1" bgroundedge="8" visible="false" alpha="0.5">
					<layer name="skin_gyro_ctrl_i" type="container" align="left" x="-1" width="14" height="14" bgcolor="0xFFFFFF" bgalpha="1" bgroundedge="8" />
				</layer>
			</layer>
			
			<!-- share icon -->
			<layer name="skin_share_icon"  x="8" y="-110"
				onclick="share_button_click();" 
				url="share.png" scale="0.4"
				autoalpha="true" alpha="1.0"
			/>
			
			
			
			<layer name="skin_btn_fullscreen" style="skin_base|skin_glow" crop="0|576|64|64" align="right" x="5" y="0" scale="0.5" onclick="switch(fullscreen);" devices="fullscreensupport" />

			<!-- title, video time -->
			<layer name="skin_title" style="skintext" align="lefttop" edge="leftbottom" x="4" capture="false" handcursor="false" html="" />
			<layer name="skin_video_time" style="skintext" align="righttop" edge="rightbottom" x="4" enabled="false" html="" />

			<!-- settings menu -->



			<!-- video-quality sub-menu -->
			<layer name="skin_settings_quality" type="container" align="righttop" edge="rightbottom" width="108" height="calc:8+24+8" autoalpha="true" alpha="0.0" y="-24" bgcapture="true" handcursor="false" bgcolor="get:skin_settings.design_bgcolor" bgalpha="get:skin_settings.design_bgalpha" bgborder="get:skin_settings.design_bgborder" bgroundedge="get:skin_settings.design_bgroundedge" bgshadow="get:skin_settings.design_bgshadow">
				<layer name="skin_settings_q0" style="settingsitem" y="8" onclick="skin_close_settings();"><layer name="skin_settings_q0t" x="-1" style="skintext" align="center" html="Time period" /></layer>
				<layer name="skin_settings_qs" type="container" align="lefttop" y="36" width="100%" height="1" bgcolor="0xFFFFFF" bgalpha="0.5" />
			</layer>

			<!-- sound volume control -->
			<layer name="skin_volumectrl" type="container" align="lefttop" edge="leftbottom" width="32" height="110" x="40" y="-24" autoalpha="true" alpha="0.0" bgcolor="get:skin_settings.design_bgcolor" bgalpha="get:skin_settings.design_bgalpha" bgborder="get:skin_settings.design_bgborder" bgroundedge="get:skin_settings.design_bgroundedge" bgshadow="get:skin_settings.design_bgshadow" bgcapture="true" onover="stopdelayedcall(autoclose_volumectrl);" onout="if(pressed == false, delayedcall(autoclose_volumectrl, 0.5, skin_close_volumectrl()); );" ondown="stopdelayedcall(autoclose_volumectrl); skin_volumectrl_ondownchanging();" onup="onout();">
				<layer name="skin_volumectrl_bar_container" type="container" align="lefttop" width="100%" height="100%">
					<layer name="skin_volumectrl_bar" type="container" bgcolor="0xFFFFFF" bgalpha="0.25" align="center" width="4" height="-32">
						<layer name="skin_volumectrl_pos" type="container" bgcolor="0xFFFFFF" bgalpha="1.0" align="top" edge="center" x="0" bgroundedge="8" width="10" height="10" />
					</layer>
				</layer>
			</layer>

		</layer>

		<!-- glow effect layer -->
		<layer name="skin_buttonglow" style="skin_base" crop="64|384|64|64" align="center" x="0" y="1" scale="1.0" alpha="0.0" visible="false" enabled="false" />

		<!-- centered play/pause button -->
		<layer name="skin_video_playpause" keep="true" style="skin_base|skin_glow" crop="0|640|64|64" scale="0.75" align="center" alpha="0.0" autoalpha="true" state="hidden" onclick="skin_video_playpause_click();" />

		<!-- error window -->
		<layer name="skin_error" visible="false" zorder="99" type="container" align="center" width="100" height="100" bgcapture="true" onclick="set(visible,false);" bgcolor="get:skin_settings.design_bgcolor" bgalpha="get:skin_settings.design_bgalpha" bgborder="get:skin_settings.design_bgborder" bgroundedge="get:skin_settings.design_bgroundedge" bgshadow="get:skin_settings.design_bgshadow">
			<layer name="skin_error_msg" style="skintext" align="center" html="" enabled="false" padding="8 16" onautosized="copy(layer[skin_error].width, width); copy(layer[skin_error].height, height)" />
		</layer>
		
		<!-- loading message -->
		<layer name="skin_loadingtext" url="%SWFPATH%/plugins/textfield.swf" align="center" x="5" y="-5" html="get:skin_settings.loadingtext" visible="false" autoheight="true" background="false" border="false" enabled="false" css="calc:skin_settings.design_text_css + ' text-align:center; font-style:italic; font-size:22px;'" textshadow="get:skin_settings.design_text_shadow" />
		
	</layer>


	<action name="skin_video_setup">
		if(skin_video_setup_done !== true,
			set(skin_video_setup_done, true);

			<!-- use the video events for getting state updates -->
			set(plugin[video].onvideoready, skin_video_updatestate() );
			set(plugin[video].onvideoplay, skin_video_updatestate(); if(skin_settings_opened !== true, skin_autohide(2.0)); );
			set(plugin[video].onvideopaused, skin_video_updatestate(); skin_show_playpause(); );
			set(plugin[video].onvideocomplete, skin_video_updatestate(); skin_show_playpause(); skin_show(); );
			set(plugin[video].onerror, skin_video_error() );

			<!-- when paused onstart, show the play button -->
			if(plugin[video].pausedonstart,
				set(layer[skin_video_playpause].state, 'visible');
				set(layer[skin_video_playpause].enabled, true);
				tween(layer[skin_video_playpause].alpha, 1.0);
			  );

			<!-- use the current scene title -->
			copy(layer[skin_title].html, scene[get(xml.scene)].title);

			<!-- start the video-time update interval -->
			setinterval(skin_video_seek_updates, 0.5, skin_video_updatetime() );
		  );
	</action>


	<action name="skin_video_updatetime">
		copy(t1, plugin[video].time);
		copy(t2, plugin[video].totaltime);
		if(%1 !== null, calc(t1, %1 * t2); );
		div(t1_min, t1, 60);
		mod(t1_sec, t1, 60);
		Math.floor(t1_min);
		Math.floor(t1_sec);
		div(t2_min, t2, 60);
		mod(t2_sec, t2, 60);
		Math.floor(t2_min);
		Math.floor(t2_sec);
		calc(layer[skin_video_time].html, t1_min + ':' + (t1_sec LT 10 ? '0' : '') + t1_sec + ' / ' + t2_min + ':' + (t2_sec LT 10 ? '0' : '') + t2_sec);
		calc(layer[skin_video_seekpos].x, (t1 / t2 * 100) + '%');
		
		set(sp, get(layer[skin_video_seekpos].x));
		js(alert(get(sp));
		
		calc(layer[skin_video_loadbar].width, (plugin[video].loadedbytes / plugin[video].totalbytes * 100) + '%');
	</action>


	<action name="skin_video_ondownseeking">
		asyncloop(pressed,
			screentolayer(skin_video_seekbar, mouse.stagex,mouse.stagey, lx,ly);
			calc(seekpos, lx / layer[skin_video_seekbar].pixelwidth);
			clamp(seekpos, 0.0, 1.0);
			skin_video_updatetime(seekpos);
		  ,
			plugin[video].seek(calc((seekpos * 100) + '%'));
		  );
	</action>


	<action name="skin_video_updatestate">
		calc(layer[skin_video_playpause].crop, plugin[video].ispaused ? '0|640|64|64' : '64|640|64|64');
		copy(layer[skin_btn_playpause].crop, layer[skin_video_playpause].crop);
		
		if(plugin[video].ispaused,
			set(layer[skin_share_icon].state, 'visible');
			tween(layer[skin_share_icon].alpha, 1.0, 0.2);
		  ,
			set(layer[skin_share_icon].state, 'hidden');
			tween(layer[skin_share_icon].alpha, 0.0, 0.2);
		  );
	</action>


	<action name="skin_video_error">
		calc(layer[skin_error_msg].html, 'Error: ' + videoerror);
		set(layer[skin_error].visible, true);
	</action>


	<action name="skin_video_click_event">
		delayedcall(skin_click_detection, 0.25,
			if(layer[skin_control_bar].state == 'hidden',
				skin_show();
			  ,
				if(skin_settings_opened !== true, skin_autohide(6.0));
			  );

			if(plugin[video].ispaused,
				plugin[video].play();
				set(layer[skin_video_playpause].state, 'visible');
				tween(layer[skin_video_playpause].alpha, 1.0);
				delayedcall(skin_autohide_pp, 2.0, set(layer[skin_video_playpause].state,'hidden'); tween(layer[skin_video_playpause].alpha, 0.0); );
			  ,
				plugin[video].pause();
				set(layer[skin_video_playpause].state, 'visible');
				tween(layer[skin_video_playpause].alpha, 1.0);
				delayedcall(skin_autohide_pp, 2.0, set(layer[skin_video_playpause].state,'hidden'); tween(layer[skin_video_playpause].alpha, 0.0); );
			  );
			  
		  );
	</action>


	<action name="skin_autohide">
		delayedcall(skin_autohide, %1,
			set(layer[skin_control_bar].state, 'hidden');
			tween(layer[skin_control_bar].y, calc(-(skin_settings.controlbar_offset + skin_settings.controlbar_height)));
			tween(layer[skin_control_bar].alpha, 0.0);
		 );
	</action>


	<action name="skin_show">
		stopdelayedcall(skin_autohide);
		set(layer[skin_control_bar].state, 'visible');
		tween(layer[skin_control_bar].y, get(skin_settings.controlbar_offset));
		tween(layer[skin_control_bar].alpha, 1.0);
	</action>


	<action name="skin_show_playpause">
		set(layer[skin_video_playpause].state, 'visible');
		tween(layer[skin_video_playpause].alpha, 1.0);
		delayedcall(skin_autohide_pp, 2.0,
			set(layer[skin_video_playpause].state,'hidden');
			tween(layer[skin_video_playpause].alpha, 0.0);
		  );
	</action>


	<action name="skin_hide_playpause">
		set(layer[skin_video_playpause].state, 'hidden');
		tween(layer[skin_video_playpause].alpha, 0.0);
	</action>


	<action name="skin_video_down_event">
		stopdelayedcall(skin_click_detection);
	</action>


	<action name="skin_video_playpause_click">
		if(plugin[video].ispaused,
			plugin[video].play();
			set(layer[skin_video_playpause].state, 'hidden');
			tween(layer[skin_video_playpause].alpha, 0.0);
		  ,
			plugin[video].pause();
			set(layer[skin_video_playpause].state, 'visible');
			tween(layer[skin_video_playpause].alpha, 1.0);
			delayedcall(skin_autohide_pp, 2.0, set(layer[skin_video_playpause].state,'hidden'); tween(layer[skin_video_playpause].alpha, 0.0); );
		  );
	</action>

	<action name="skin_open_volumectrl">
		if(skin_volumectrl_opened !== true,
			set(skin_volumectrl_opened, true);

			tween(layer[skin_volumectrl].alpha, 1.0, 0.2);
		  );
	</action>


	<action name="skin_close_volumectrl">
		if(skin_volumectrl_opened === true,
			set(skin_volumectrl_opened, false);

			tween(layer[skin_volumectrl].alpha, 0.0, 0.2);
		  );
	</action>


	<action name="skin_volumectrl_ondownchanging">
		asyncloop(pressed,
			screentolayer(skin_volumectrl_bar, mouse.stagex,mouse.stagey, lx,ly);
			calc(volumectrl_pos, 1.0 - (ly / layer[skin_volumectrl_bar].pixelheight));
			clamp(volumectrl_pos, 0.0, 1.0);
			copy(plugin[video].volume, volumectrl_pos);
			skin_volumectrl_update();
		  );
	</action>


	<action name="skin_volumectrl_update">
		calc(layer[skin_volumectrl_pos].y, ((1.0 - plugin[video].volume) * 100) + '%');
		calc(layer[skin_btn_volume_icon].crop, plugin[video].volume GT 0.0 ? '64|704|64|64' : '64|704|40|64');
		calc(layer[skin_btn_volume_icon].alpha, plugin[video].volume GT 0.0 ? 1.0 : 0.25);
	</action>


	<action name="skin_have_gyro_support">
		set(layer[skin_gyro_container].enabled, true);
		set(layer[skin_gyro_container].alpha, 1.0);
		set(layer[skin_gyro_not].visible, false);
		set(layer[skin_gyro_ctrl].visible, true);
	</action>


	<action name="skin_gyro_enabled">
		tween(layer[skin_gyro_ctrl_i].x, 11);
		tween(layer[skin_gyro_ctrl].alpha, 1.0);
	</action>


	<action name="skin_gyro_disabled">
		tween(layer[skin_gyro_ctrl_i].x, -1);
		tween(layer[skin_gyro_ctrl].alpha, 0.5);
	</action>

	<action name="skin_changecontrolmode">
		switch(control.mouse, moveto, drag);
		switch(control.touch, moveto, drag);
	</action>
	
	<action name="showLoading">
		set(layer[skin_loadingtext].visible, true);
	</action>
	
	<action name="checkLoading"> 
		set(isseeking, get(plugin[video].isseeking));
		if(isseeking, 
			delayedcall(0.2, checkLoading());
		,
			doneLoading();
		);
	</action>
	
	
	
	<action name="doneLoading">
		set(layer[skin_loadingtext].visible, false);
		js(hideStartBox());
	</action>
	
	<action name="share_button_click">
		set(preShareGyro, get(plugin[skin_gyro].enabled));
		skin_deeplinking_update_url_process();
		skin_autohide();
		set(plugin[skin_gyro].enabled, false);
		js(showShare());
	</action>
	
	<action name="endShare">
		set(plugin[skin_gyro].enabled, get(preShareGyro));
		skin_show();
	</action>
	
	<action name="skin_deeplinking_update_url_process">
		copy(adr, browser.location);
		indexoftxt(qi, get(adr), '?');
		if(qi GT 0, subtxt(adr, adr, 0, get(qi)));
		copy(si, scene[get(xml.scene)].index);
		copy(h, view.hlookat);
		copy(v, view.vlookat);
		copy(f, view.fov);
		set(pp, calc(f LT 10 ? 6 : 2));
		roundval(h, get(pp));
		roundval(v, get(pp));
		roundval(f, get(pp));
		set(t,get(plugin[video].time));
		roundval( t, 2);
		set(video, get(vs.sourcename));
		set(adr, calc(adr + '?hlookat=' + h + '&amp;vlookat=' + v + '&amp;time=' + t + '&amp;video=' + video + '&amp;fov=' + f));
		js( history.replaceState(null, document.title, get(adr)); );
	</action>
	
	<action name="skin_open_settings">
		stopdelayedcall(skin_autohide);
		if(skin_settings_opened !== true,
			set(skin_settings_opened, true);
			tween(layer[skin_settings_quality].alpha,1.0,0.2);
		  );
	</action>


	<action name="skin_close_settings">
		if(skin_settings_opened === true,
			set(skin_settings_opened, false);
			tween(layer[skin_btn_settings].rotate, 0);
			tween(layer[skin_settings_quality].alpha, 0.0, 0.2);
			skin_autohide(2.0)
		  );
	</action>
	
	

	<!-- video interface actions -->

	<!-- videointerface_addsource (name, videourl, posterurl)
		%1 - name
		%2 - videourl
		%3 - posterurl
	-->
	<action name="videointerface_addsource">
		<!-- init/setup the video interface skin -->
		skin_video_setup();

		set(videosources['v%1'].sourcename, '%1');
		set(videosources['v%1'].videourl, '%2');
		set(videosources['v%1'].posterurl, '%3');

		<!-- add layers to the quality sub-menu -->
		calc(lname, 'skin_settings_q' + videosources.count);
		addlayer(get(lname));
		copy(ly, layer[get(lname)]);
		ly.loadstyle(settingsitem);
		calc(ly.y, 20 + 24*videosources.count);
		set(ly.parent, 'skin_settings_quality');
		set(ly.onclick, videointerface_play('%1') );
		calc(lname2, lname + 't');
		addlayer(get(lname2));
		copy(ly2, layer[get(lname2)]);
		ly2.loadstyle(skintext);
		copy(ly2.parent, lname);
		set(ly2.align,'center');
		set(ly2.html,'%1');
		copy(videosources['v%1'].textelement, ly2);

		calc(layer[skin_settings_quality].height, 20+24+24*videosources.count+6);
	</action>
	
	<!-- videointerface_addsource
		%1 - name
		%2 - videourl
		%3 - posterurl
	-->
	<action name="videointerface_play">
		showLoading();
		
		set(layer[skin_error].visible, false);
		copy(vs, videosources['v%1']);
		<!-- get specific HD frame -->
		def(previewFrameName, string );
		
		<!-- first time -->
		if(currentFrame === null, set(currentFrame, 100001));
		
		set(timeTest, get(plugin[video].time));
		ifnot(timeTest==NaN,
			ifnot(timeTest==0,
				copy(currentFrame,plugin[video].time);
				mul(currentFrame,2);
				roundval(currentFrame,0);
				calc(currentFrame, currentFrame + 100001);	
			)
		);
	
		<!--
		
		calc(previewFrameName, get(vs.posterurl) + previewFrame + '.jpg');-->
		
		<!-- jump to point or just play at current -->
		if((%2 === null), set(targetTime, get(plugin[video].time)), set(targetTime,  %2));
		
		subtxt(previewFrame, get(currentFrame), 1, 5);
		txtadd(previewFrameName, get(vs.posterurl), get(previewFrame));
		txtadd(previewFrameName, get(previewFrameName), '.jpg');
		plugin[video].playvideo(get(vs.videourl), get(previewFrameName), get(plugin[video].pausedonstart), get(targetTime));
		set(plugin[video].onvideoready,checkLoading());
		skin_volumectrl_update();
		set(layer[skin_quality].html, %1);
		for(set(i,0), i LT videosources.count, inc(i),
			videosources[get(i)].textelement.loadstyle(calc(videosources[get(i)].sourcename == '%1' ? 'skintext_sel' : 'skintext'));
		  );
	</action>

</krpano>
